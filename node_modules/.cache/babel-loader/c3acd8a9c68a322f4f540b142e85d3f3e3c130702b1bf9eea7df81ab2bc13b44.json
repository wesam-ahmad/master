{"ast":null,"code":"\"use strict\";\n\n/**\n * Methods for modifying the DOM structure.\n *\n * @module cheerio/manipulation\n */\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clone = exports.text = exports.toString = exports.html = exports.empty = exports.replaceWith = exports.remove = exports.insertBefore = exports.before = exports.insertAfter = exports.after = exports.wrapAll = exports.unwrap = exports.wrapInner = exports.wrap = exports.prepend = exports.append = exports.prependTo = exports.appendTo = exports._makeDomArray = void 0;\nvar domhandler_1 = require(\"domhandler\");\nvar parse_js_1 = require(\"../parse.js\");\nvar static_js_1 = require(\"../static.js\");\nvar utils_js_1 = require(\"../utils.js\");\nvar domutils_1 = require(\"domutils\");\n/**\n * Create an array of nodes, recursing into arrays and parsing strings if necessary.\n *\n * @private\n * @category Manipulation\n * @param elem - Elements to make an array of.\n * @param clone - Optionally clone nodes.\n * @returns The array of nodes.\n */\nfunction _makeDomArray(elem, clone) {\n  var _this = this;\n  if (elem == null) {\n    return [];\n  }\n  if ((0, utils_js_1.isCheerio)(elem)) {\n    return clone ? (0, utils_js_1.cloneDom)(elem.get()) : elem.get();\n  }\n  if (Array.isArray(elem)) {\n    return elem.reduce(function (newElems, el) {\n      return newElems.concat(_this._makeDomArray(el, clone));\n    }, []);\n  }\n  if (typeof elem === 'string') {\n    return this._parse(elem, this.options, false, null).children;\n  }\n  return clone ? (0, utils_js_1.cloneDom)([elem]) : [elem];\n}\nexports._makeDomArray = _makeDomArray;\nfunction _insert(concatenator) {\n  return function () {\n    var _this = this;\n    var elems = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      elems[_i] = arguments[_i];\n    }\n    var lastIdx = this.length - 1;\n    return (0, utils_js_1.domEach)(this, function (el, i) {\n      if (!(0, domhandler_1.hasChildren)(el)) return;\n      var domSrc = typeof elems[0] === 'function' ? elems[0].call(el, i, _this._render(el.children)) : elems;\n      var dom = _this._makeDomArray(domSrc, i < lastIdx);\n      concatenator(dom, el.children, el);\n    });\n  };\n}\n/**\n * Modify an array in-place, removing some number of elements and adding new\n * elements directly following them.\n *\n * @private\n * @category Manipulation\n * @param array - Target array to splice.\n * @param spliceIdx - Index at which to begin changing the array.\n * @param spliceCount - Number of elements to remove from the array.\n * @param newElems - Elements to insert into the array.\n * @param parent - The parent of the node.\n * @returns The spliced array.\n */\nfunction uniqueSplice(array, spliceIdx, spliceCount, newElems, parent) {\n  var _a, _b;\n  var spliceArgs = __spreadArray([spliceIdx, spliceCount], newElems, true);\n  var prev = spliceIdx === 0 ? null : array[spliceIdx - 1];\n  var next = spliceIdx + spliceCount >= array.length ? null : array[spliceIdx + spliceCount];\n  /*\n   * Before splicing in new elements, ensure they do not already appear in the\n   * current array.\n   */\n  for (var idx = 0; idx < newElems.length; ++idx) {\n    var node = newElems[idx];\n    var oldParent = node.parent;\n    if (oldParent) {\n      var oldSiblings = oldParent.children;\n      var prevIdx = oldSiblings.indexOf(node);\n      if (prevIdx > -1) {\n        oldParent.children.splice(prevIdx, 1);\n        if (parent === oldParent && spliceIdx > prevIdx) {\n          spliceArgs[0]--;\n        }\n      }\n    }\n    node.parent = parent;\n    if (node.prev) {\n      node.prev.next = (_a = node.next) !== null && _a !== void 0 ? _a : null;\n    }\n    if (node.next) {\n      node.next.prev = (_b = node.prev) !== null && _b !== void 0 ? _b : null;\n    }\n    node.prev = idx === 0 ? prev : newElems[idx - 1];\n    node.next = idx === newElems.length - 1 ? next : newElems[idx + 1];\n  }\n  if (prev) {\n    prev.next = newElems[0];\n  }\n  if (next) {\n    next.prev = newElems[newElems.length - 1];\n  }\n  return array.splice.apply(array, spliceArgs);\n}\n/**\n * Insert every element in the set of matched elements to the end of the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').appendTo('#fruits');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //      <li class=\"plum\">Plum</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to append elements to.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/appendTo/}\n */\nfunction appendTo(target) {\n  var appendTarget = (0, utils_js_1.isCheerio)(target) ? target : this._make(target);\n  appendTarget.append(this);\n  return this;\n}\nexports.appendTo = appendTo;\n/**\n * Insert every element in the set of matched elements to the beginning of the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').prependTo('#fruits');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to prepend elements to.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/prependTo/}\n */\nfunction prependTo(target) {\n  var prependTarget = (0, utils_js_1.isCheerio)(target) ? target : this._make(target);\n  prependTarget.prepend(this);\n  return this;\n}\nexports.prependTo = prependTo;\n/**\n * Inserts content as the _last_ child of each of the selected elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('ul').append('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //      <li class=\"plum\">Plum</li>\n * //    </ul>\n * ```\n *\n * @see {@link https://api.jquery.com/append/}\n */\nexports.append = _insert(function (dom, children, parent) {\n  uniqueSplice(children, children.length, 0, dom, parent);\n});\n/**\n * Inserts content as the _first_ child of each of the selected elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('ul').prepend('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @see {@link https://api.jquery.com/prepend/}\n */\nexports.prepend = _insert(function (dom, children, parent) {\n  uniqueSplice(children, 0, 0, dom, parent);\n});\nfunction _wrap(insert) {\n  return function (wrapper) {\n    var lastIdx = this.length - 1;\n    var lastParent = this.parents().last();\n    for (var i = 0; i < this.length; i++) {\n      var el = this[i];\n      var wrap_1 = typeof wrapper === 'function' ? wrapper.call(el, i, el) : typeof wrapper === 'string' && !(0, utils_js_1.isHtml)(wrapper) ? lastParent.find(wrapper).clone() : wrapper;\n      var wrapperDom = this._makeDomArray(wrap_1, i < lastIdx)[0];\n      if (!wrapperDom || !(0, domhandler_1.hasChildren)(wrapperDom)) continue;\n      var elInsertLocation = wrapperDom;\n      /*\n       * Find the deepest child. Only consider the first tag child of each node\n       * (ignore text); stop if no children are found.\n       */\n      var j = 0;\n      while (j < elInsertLocation.children.length) {\n        var child = elInsertLocation.children[j];\n        if ((0, utils_js_1.isTag)(child)) {\n          elInsertLocation = child;\n          j = 0;\n        } else {\n          j++;\n        }\n      }\n      insert(el, elInsertLocation, [wrapperDom]);\n    }\n    return this;\n  };\n}\n/**\n * The .wrap() function can take any string or object that could be passed to\n * the $() factory function to specify a DOM structure. This structure may be\n * nested several levels deep, but should contain only one inmost element. A\n * copy of this structure will be wrapped around each of the elements in the set\n * of matched elements. This method returns the original set of elements for\n * chaining purposes.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const redFruit = $('<div class=\"red-fruit\"></div>');\n * $('.apple').wrap(redFruit);\n *\n * //=> <ul id=\"fruits\">\n * //     <div class=\"red-fruit\">\n * //      <li class=\"apple\">Apple</li>\n * //     </div>\n * //     <li class=\"orange\">Orange</li>\n * //     <li class=\"plum\">Plum</li>\n * //   </ul>\n *\n * const healthy = $('<div class=\"healthy\"></div>');\n * $('li').wrap(healthy);\n *\n * //=> <ul id=\"fruits\">\n * //     <div class=\"healthy\">\n * //       <li class=\"apple\">Apple</li>\n * //     </div>\n * //     <div class=\"healthy\">\n * //       <li class=\"orange\">Orange</li>\n * //     </div>\n * //     <div class=\"healthy\">\n * //        <li class=\"plum\">Plum</li>\n * //     </div>\n * //   </ul>\n * ```\n *\n * @param wrapper - The DOM structure to wrap around each element in the selection.\n * @see {@link https://api.jquery.com/wrap/}\n */\nexports.wrap = _wrap(function (el, elInsertLocation, wrapperDom) {\n  var parent = el.parent;\n  if (!parent) return;\n  var siblings = parent.children;\n  var index = siblings.indexOf(el);\n  (0, parse_js_1.update)([el], elInsertLocation);\n  /*\n   * The previous operation removed the current element from the `siblings`\n   * array, so the `dom` array can be inserted without removing any\n   * additional elements.\n   */\n  uniqueSplice(siblings, index, 0, wrapperDom, parent);\n});\n/**\n * The .wrapInner() function can take any string or object that could be passed\n * to the $() factory function to specify a DOM structure. This structure may be\n * nested several levels deep, but should contain only one inmost element. The\n * structure will be wrapped around the content of each of the elements in the\n * set of matched elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const redFruit = $('<div class=\"red-fruit\"></div>');\n * $('.apple').wrapInner(redFruit);\n *\n * //=> <ul id=\"fruits\">\n * //     <li class=\"apple\">\n * //       <div class=\"red-fruit\">Apple</div>\n * //     </li>\n * //     <li class=\"orange\">Orange</li>\n * //     <li class=\"pear\">Pear</li>\n * //   </ul>\n *\n * const healthy = $('<div class=\"healthy\"></div>');\n * $('li').wrapInner(healthy);\n *\n * //=> <ul id=\"fruits\">\n * //     <li class=\"apple\">\n * //       <div class=\"healthy\">Apple</div>\n * //     </li>\n * //     <li class=\"orange\">\n * //       <div class=\"healthy\">Orange</div>\n * //     </li>\n * //     <li class=\"pear\">\n * //       <div class=\"healthy\">Pear</div>\n * //     </li>\n * //   </ul>\n * ```\n *\n * @param wrapper - The DOM structure to wrap around the content of each element\n *   in the selection.\n * @returns The instance itself, for chaining.\n * @see {@link https://api.jquery.com/wrapInner/}\n */\nexports.wrapInner = _wrap(function (el, elInsertLocation, wrapperDom) {\n  if (!(0, domhandler_1.hasChildren)(el)) return;\n  (0, parse_js_1.update)(el.children, elInsertLocation);\n  (0, parse_js_1.update)(wrapperDom, el);\n});\n/**\n * The .unwrap() function, removes the parents of the set of matched elements\n * from the DOM, leaving the matched elements in their place.\n *\n * @category Manipulation\n * @example <caption>without selector</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<div id=test>\\n  <div><p>Hello</p></div>\\n  <div><p>World</p></div>\\n</div>'\n * );\n * $('#test p').unwrap();\n *\n * //=> <div id=test>\n * //     <p>Hello</p>\n * //     <p>World</p>\n * //   </div>\n * ```\n *\n * @example <caption>with selector</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<div id=test>\\n  <p>Hello</p>\\n  <b><p>World</p></b>\\n</div>'\n * );\n * $('#test p').unwrap('b');\n *\n * //=> <div id=test>\n * //     <p>Hello</p>\n * //     <p>World</p>\n * //   </div>\n * ```\n *\n * @param selector - A selector to check the parent element against. If an\n *   element's parent does not match the selector, the element won't be unwrapped.\n * @returns The instance itself, for chaining.\n * @see {@link https://api.jquery.com/unwrap/}\n */\nfunction unwrap(selector) {\n  var _this = this;\n  this.parent(selector).not('body').each(function (_, el) {\n    _this._make(el).replaceWith(el.children);\n  });\n  return this;\n}\nexports.unwrap = unwrap;\n/**\n * The .wrapAll() function can take any string or object that could be passed to\n * the $() function to specify a DOM structure. This structure may be nested\n * several levels deep, but should contain only one inmost element. The\n * structure will be wrapped around all of the elements in the set of matched\n * elements, as a single group.\n *\n * @category Manipulation\n * @example <caption>With markup passed to `wrapAll`</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<div class=\"container\"><div class=\"inner\">First</div><div class=\"inner\">Second</div></div>'\n * );\n * $('.inner').wrapAll(\"<div class='new'></div>\");\n *\n * //=> <div class=\"container\">\n * //     <div class='new'>\n * //       <div class=\"inner\">First</div>\n * //       <div class=\"inner\">Second</div>\n * //     </div>\n * //   </div>\n * ```\n *\n * @example <caption>With an existing cheerio instance</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<span>Span 1</span><strong>Strong</strong><span>Span 2</span>'\n * );\n * const wrap = $('<div><p><em><b></b></em></p></div>');\n * $('span').wrapAll(wrap);\n *\n * //=> <div>\n * //     <p>\n * //       <em>\n * //         <b>\n * //           <span>Span 1</span>\n * //           <span>Span 2</span>\n * //         </b>\n * //       </em>\n * //     </p>\n * //   </div>\n * //   <strong>Strong</strong>\n * ```\n *\n * @param wrapper - The DOM structure to wrap around all matched elements in the\n *   selection.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/wrapAll/}\n */\nfunction wrapAll(wrapper) {\n  var el = this[0];\n  if (el) {\n    var wrap_2 = this._make(typeof wrapper === 'function' ? wrapper.call(el, 0, el) : wrapper).insertBefore(el);\n    // If html is given as wrapper, wrap may contain text elements\n    var elInsertLocation = void 0;\n    for (var i = 0; i < wrap_2.length; i++) {\n      if (wrap_2[i].type === 'tag') elInsertLocation = wrap_2[i];\n    }\n    var j = 0;\n    /*\n     * Find the deepest child. Only consider the first tag child of each node\n     * (ignore text); stop if no children are found.\n     */\n    while (elInsertLocation && j < elInsertLocation.children.length) {\n      var child = elInsertLocation.children[j];\n      if (child.type === 'tag') {\n        elInsertLocation = child;\n        j = 0;\n      } else {\n        j++;\n      }\n    }\n    if (elInsertLocation) this._make(elInsertLocation).append(this);\n  }\n  return this;\n}\nexports.wrapAll = wrapAll;\n/* eslint-disable jsdoc/check-param-names*/\n/**\n * Insert content next to each element in the set of matched elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('.apple').after('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param content - HTML string, DOM element, array of DOM elements or Cheerio\n *   to insert after each element in the set of matched elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/after/}\n */\nfunction after() {\n  var _this = this;\n  var elems = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    elems[_i] = arguments[_i];\n  }\n  var lastIdx = this.length - 1;\n  return (0, utils_js_1.domEach)(this, function (el, i) {\n    var parent = el.parent;\n    if (!(0, domhandler_1.hasChildren)(el) || !parent) {\n      return;\n    }\n    var siblings = parent.children;\n    var index = siblings.indexOf(el);\n    // If not found, move on\n    /* istanbul ignore next */\n    if (index < 0) return;\n    var domSrc = typeof elems[0] === 'function' ? elems[0].call(el, i, _this._render(el.children)) : elems;\n    var dom = _this._makeDomArray(domSrc, i < lastIdx);\n    // Add element after `this` element\n    uniqueSplice(siblings, index + 1, 0, dom, parent);\n  });\n}\nexports.after = after;\n/* eslint-enable jsdoc/check-param-names*/\n/**\n * Insert every element in the set of matched elements after the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').insertAfter('.apple');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to insert elements after.\n * @returns The set of newly inserted elements.\n * @see {@link https://api.jquery.com/insertAfter/}\n */\nfunction insertAfter(target) {\n  var _this = this;\n  if (typeof target === 'string') {\n    target = this._make(target);\n  }\n  this.remove();\n  var clones = [];\n  this._makeDomArray(target).forEach(function (el) {\n    var clonedSelf = _this.clone().toArray();\n    var parent = el.parent;\n    if (!parent) {\n      return;\n    }\n    var siblings = parent.children;\n    var index = siblings.indexOf(el);\n    // If not found, move on\n    /* istanbul ignore next */\n    if (index < 0) return;\n    // Add cloned `this` element(s) after target element\n    uniqueSplice(siblings, index + 1, 0, clonedSelf, parent);\n    clones.push.apply(clones, clonedSelf);\n  });\n  return this._make(clones);\n}\nexports.insertAfter = insertAfter;\n/* eslint-disable jsdoc/check-param-names*/\n/**\n * Insert content previous to each element in the set of matched elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('.apple').before('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param content - HTML string, DOM element, array of DOM elements or Cheerio\n *   to insert before each element in the set of matched elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/before/}\n */\nfunction before() {\n  var _this = this;\n  var elems = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    elems[_i] = arguments[_i];\n  }\n  var lastIdx = this.length - 1;\n  return (0, utils_js_1.domEach)(this, function (el, i) {\n    var parent = el.parent;\n    if (!(0, domhandler_1.hasChildren)(el) || !parent) {\n      return;\n    }\n    var siblings = parent.children;\n    var index = siblings.indexOf(el);\n    // If not found, move on\n    /* istanbul ignore next */\n    if (index < 0) return;\n    var domSrc = typeof elems[0] === 'function' ? elems[0].call(el, i, _this._render(el.children)) : elems;\n    var dom = _this._makeDomArray(domSrc, i < lastIdx);\n    // Add element before `el` element\n    uniqueSplice(siblings, index, 0, dom, parent);\n  });\n}\nexports.before = before;\n/* eslint-enable jsdoc/check-param-names*/\n/**\n * Insert every element in the set of matched elements before the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').insertBefore('.apple');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to insert elements before.\n * @returns The set of newly inserted elements.\n * @see {@link https://api.jquery.com/insertBefore/}\n */\nfunction insertBefore(target) {\n  var _this = this;\n  var targetArr = this._make(target);\n  this.remove();\n  var clones = [];\n  (0, utils_js_1.domEach)(targetArr, function (el) {\n    var clonedSelf = _this.clone().toArray();\n    var parent = el.parent;\n    if (!parent) {\n      return;\n    }\n    var siblings = parent.children;\n    var index = siblings.indexOf(el);\n    // If not found, move on\n    /* istanbul ignore next */\n    if (index < 0) return;\n    // Add cloned `this` element(s) after target element\n    uniqueSplice(siblings, index, 0, clonedSelf, parent);\n    clones.push.apply(clones, clonedSelf);\n  });\n  return this._make(clones);\n}\nexports.insertBefore = insertBefore;\n/**\n * Removes the set of matched elements from the DOM and all their children.\n * `selector` filters the set of matched elements to be removed.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('.pear').remove();\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //    </ul>\n * ```\n *\n * @param selector - Optional selector for elements to remove.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/remove/}\n */\nfunction remove(selector) {\n  // Filter if we have selector\n  var elems = selector ? this.filter(selector) : this;\n  (0, utils_js_1.domEach)(elems, function (el) {\n    (0, domutils_1.removeElement)(el);\n    el.prev = el.next = el.parent = null;\n  });\n  return this;\n}\nexports.remove = remove;\n/**\n * Replaces matched elements with `content`.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const plum = $('<li class=\"plum\">Plum</li>');\n * $('.pear').replaceWith(plum);\n * $.html();\n * //=> <ul id=\"fruits\">\n * //     <li class=\"apple\">Apple</li>\n * //     <li class=\"orange\">Orange</li>\n * //     <li class=\"plum\">Plum</li>\n * //   </ul>\n * ```\n *\n * @param content - Replacement for matched elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/replaceWith/}\n */\nfunction replaceWith(content) {\n  var _this = this;\n  return (0, utils_js_1.domEach)(this, function (el, i) {\n    var parent = el.parent;\n    if (!parent) {\n      return;\n    }\n    var siblings = parent.children;\n    var cont = typeof content === 'function' ? content.call(el, i, el) : content;\n    var dom = _this._makeDomArray(cont);\n    /*\n     * In the case that `dom` contains nodes that already exist in other\n     * structures, ensure those nodes are properly removed.\n     */\n    (0, parse_js_1.update)(dom, null);\n    var index = siblings.indexOf(el);\n    // Completely remove old element\n    uniqueSplice(siblings, index, 1, dom, parent);\n    if (!dom.includes(el)) {\n      el.parent = el.prev = el.next = null;\n    }\n  });\n}\nexports.replaceWith = replaceWith;\n/**\n * Empties an element, removing all its children.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('ul').empty();\n * $.html();\n * //=>  <ul id=\"fruits\"></ul>\n * ```\n *\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/empty/}\n */\nfunction empty() {\n  return (0, utils_js_1.domEach)(this, function (el) {\n    if (!(0, domhandler_1.hasChildren)(el)) return;\n    el.children.forEach(function (child) {\n      child.next = child.prev = child.parent = null;\n    });\n    el.children.length = 0;\n  });\n}\nexports.empty = empty;\nfunction html(str) {\n  var _this = this;\n  if (str === undefined) {\n    var el = this[0];\n    if (!el || !(0, domhandler_1.hasChildren)(el)) return null;\n    return this._render(el.children);\n  }\n  return (0, utils_js_1.domEach)(this, function (el) {\n    if (!(0, domhandler_1.hasChildren)(el)) return;\n    el.children.forEach(function (child) {\n      child.next = child.prev = child.parent = null;\n    });\n    var content = (0, utils_js_1.isCheerio)(str) ? str.toArray() : _this._parse(\"\".concat(str), _this.options, false, el).children;\n    (0, parse_js_1.update)(content, el);\n  });\n}\nexports.html = html;\n/**\n * Turns the collection to a string. Alias for `.html()`.\n *\n * @category Manipulation\n * @returns The rendered document.\n */\nfunction toString() {\n  return this._render(this);\n}\nexports.toString = toString;\nfunction text(str) {\n  var _this = this;\n  // If `str` is undefined, act as a \"getter\"\n  if (str === undefined) {\n    return (0, static_js_1.text)(this);\n  }\n  if (typeof str === 'function') {\n    // Function support\n    return (0, utils_js_1.domEach)(this, function (el, i) {\n      return _this._make(el).text(str.call(el, i, (0, static_js_1.text)([el])));\n    });\n  }\n  // Append text node to each selected elements\n  return (0, utils_js_1.domEach)(this, function (el) {\n    if (!(0, domhandler_1.hasChildren)(el)) return;\n    el.children.forEach(function (child) {\n      child.next = child.prev = child.parent = null;\n    });\n    var textNode = new domhandler_1.Text(\"\".concat(str));\n    (0, parse_js_1.update)(textNode, el);\n  });\n}\nexports.text = text;\n/**\n * Clone the cheerio object.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const moreFruit = $('#fruits').clone();\n * ```\n *\n * @returns The cloned object.\n * @see {@link https://api.jquery.com/clone/}\n */\nfunction clone() {\n  return this._make((0, utils_js_1.cloneDom)(this.get()));\n}\nexports.clone = clone;","map":{"version":3,"names":["__spreadArray","to","from","pack","arguments","length","i","l","ar","Array","prototype","slice","call","concat","Object","defineProperty","exports","value","clone","text","toString","html","empty","replaceWith","remove","insertBefore","before","insertAfter","after","wrapAll","unwrap","wrapInner","wrap","prepend","append","prependTo","appendTo","_makeDomArray","domhandler_1","require","parse_js_1","static_js_1","utils_js_1","domutils_1","elem","_this","isCheerio","cloneDom","get","isArray","reduce","newElems","el","_parse","options","children","_insert","concatenator","elems","_i","lastIdx","domEach","hasChildren","domSrc","_render","dom","uniqueSplice","array","spliceIdx","spliceCount","parent","_a","_b","spliceArgs","prev","next","idx","node","oldParent","oldSiblings","prevIdx","indexOf","splice","apply","target","appendTarget","_make","prependTarget","_wrap","insert","wrapper","lastParent","parents","last","wrap_1","isHtml","find","wrapperDom","elInsertLocation","j","child","isTag","siblings","index","update","selector","not","each","_","wrap_2","type","clones","forEach","clonedSelf","toArray","push","targetArr","filter","removeElement","content","cont","includes","str","undefined","textNode","Text"],"sources":["C:/Users/Orange/Desktop/react_project/dressrental/node_modules/cheerio/lib/api/manipulation.js"],"sourcesContent":["\"use strict\";\n/**\n * Methods for modifying the DOM structure.\n *\n * @module cheerio/manipulation\n */\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.clone = exports.text = exports.toString = exports.html = exports.empty = exports.replaceWith = exports.remove = exports.insertBefore = exports.before = exports.insertAfter = exports.after = exports.wrapAll = exports.unwrap = exports.wrapInner = exports.wrap = exports.prepend = exports.append = exports.prependTo = exports.appendTo = exports._makeDomArray = void 0;\nvar domhandler_1 = require(\"domhandler\");\nvar parse_js_1 = require(\"../parse.js\");\nvar static_js_1 = require(\"../static.js\");\nvar utils_js_1 = require(\"../utils.js\");\nvar domutils_1 = require(\"domutils\");\n/**\n * Create an array of nodes, recursing into arrays and parsing strings if necessary.\n *\n * @private\n * @category Manipulation\n * @param elem - Elements to make an array of.\n * @param clone - Optionally clone nodes.\n * @returns The array of nodes.\n */\nfunction _makeDomArray(elem, clone) {\n    var _this = this;\n    if (elem == null) {\n        return [];\n    }\n    if ((0, utils_js_1.isCheerio)(elem)) {\n        return clone ? (0, utils_js_1.cloneDom)(elem.get()) : elem.get();\n    }\n    if (Array.isArray(elem)) {\n        return elem.reduce(function (newElems, el) { return newElems.concat(_this._makeDomArray(el, clone)); }, []);\n    }\n    if (typeof elem === 'string') {\n        return this._parse(elem, this.options, false, null).children;\n    }\n    return clone ? (0, utils_js_1.cloneDom)([elem]) : [elem];\n}\nexports._makeDomArray = _makeDomArray;\nfunction _insert(concatenator) {\n    return function () {\n        var _this = this;\n        var elems = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            elems[_i] = arguments[_i];\n        }\n        var lastIdx = this.length - 1;\n        return (0, utils_js_1.domEach)(this, function (el, i) {\n            if (!(0, domhandler_1.hasChildren)(el))\n                return;\n            var domSrc = typeof elems[0] === 'function'\n                ? elems[0].call(el, i, _this._render(el.children))\n                : elems;\n            var dom = _this._makeDomArray(domSrc, i < lastIdx);\n            concatenator(dom, el.children, el);\n        });\n    };\n}\n/**\n * Modify an array in-place, removing some number of elements and adding new\n * elements directly following them.\n *\n * @private\n * @category Manipulation\n * @param array - Target array to splice.\n * @param spliceIdx - Index at which to begin changing the array.\n * @param spliceCount - Number of elements to remove from the array.\n * @param newElems - Elements to insert into the array.\n * @param parent - The parent of the node.\n * @returns The spliced array.\n */\nfunction uniqueSplice(array, spliceIdx, spliceCount, newElems, parent) {\n    var _a, _b;\n    var spliceArgs = __spreadArray([\n        spliceIdx,\n        spliceCount\n    ], newElems, true);\n    var prev = spliceIdx === 0 ? null : array[spliceIdx - 1];\n    var next = spliceIdx + spliceCount >= array.length\n        ? null\n        : array[spliceIdx + spliceCount];\n    /*\n     * Before splicing in new elements, ensure they do not already appear in the\n     * current array.\n     */\n    for (var idx = 0; idx < newElems.length; ++idx) {\n        var node = newElems[idx];\n        var oldParent = node.parent;\n        if (oldParent) {\n            var oldSiblings = oldParent.children;\n            var prevIdx = oldSiblings.indexOf(node);\n            if (prevIdx > -1) {\n                oldParent.children.splice(prevIdx, 1);\n                if (parent === oldParent && spliceIdx > prevIdx) {\n                    spliceArgs[0]--;\n                }\n            }\n        }\n        node.parent = parent;\n        if (node.prev) {\n            node.prev.next = (_a = node.next) !== null && _a !== void 0 ? _a : null;\n        }\n        if (node.next) {\n            node.next.prev = (_b = node.prev) !== null && _b !== void 0 ? _b : null;\n        }\n        node.prev = idx === 0 ? prev : newElems[idx - 1];\n        node.next = idx === newElems.length - 1 ? next : newElems[idx + 1];\n    }\n    if (prev) {\n        prev.next = newElems[0];\n    }\n    if (next) {\n        next.prev = newElems[newElems.length - 1];\n    }\n    return array.splice.apply(array, spliceArgs);\n}\n/**\n * Insert every element in the set of matched elements to the end of the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').appendTo('#fruits');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //      <li class=\"plum\">Plum</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to append elements to.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/appendTo/}\n */\nfunction appendTo(target) {\n    var appendTarget = (0, utils_js_1.isCheerio)(target) ? target : this._make(target);\n    appendTarget.append(this);\n    return this;\n}\nexports.appendTo = appendTo;\n/**\n * Insert every element in the set of matched elements to the beginning of the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').prependTo('#fruits');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to prepend elements to.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/prependTo/}\n */\nfunction prependTo(target) {\n    var prependTarget = (0, utils_js_1.isCheerio)(target) ? target : this._make(target);\n    prependTarget.prepend(this);\n    return this;\n}\nexports.prependTo = prependTo;\n/**\n * Inserts content as the _last_ child of each of the selected elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('ul').append('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //      <li class=\"plum\">Plum</li>\n * //    </ul>\n * ```\n *\n * @see {@link https://api.jquery.com/append/}\n */\nexports.append = _insert(function (dom, children, parent) {\n    uniqueSplice(children, children.length, 0, dom, parent);\n});\n/**\n * Inserts content as the _first_ child of each of the selected elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('ul').prepend('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @see {@link https://api.jquery.com/prepend/}\n */\nexports.prepend = _insert(function (dom, children, parent) {\n    uniqueSplice(children, 0, 0, dom, parent);\n});\nfunction _wrap(insert) {\n    return function (wrapper) {\n        var lastIdx = this.length - 1;\n        var lastParent = this.parents().last();\n        for (var i = 0; i < this.length; i++) {\n            var el = this[i];\n            var wrap_1 = typeof wrapper === 'function'\n                ? wrapper.call(el, i, el)\n                : typeof wrapper === 'string' && !(0, utils_js_1.isHtml)(wrapper)\n                    ? lastParent.find(wrapper).clone()\n                    : wrapper;\n            var wrapperDom = this._makeDomArray(wrap_1, i < lastIdx)[0];\n            if (!wrapperDom || !(0, domhandler_1.hasChildren)(wrapperDom))\n                continue;\n            var elInsertLocation = wrapperDom;\n            /*\n             * Find the deepest child. Only consider the first tag child of each node\n             * (ignore text); stop if no children are found.\n             */\n            var j = 0;\n            while (j < elInsertLocation.children.length) {\n                var child = elInsertLocation.children[j];\n                if ((0, utils_js_1.isTag)(child)) {\n                    elInsertLocation = child;\n                    j = 0;\n                }\n                else {\n                    j++;\n                }\n            }\n            insert(el, elInsertLocation, [wrapperDom]);\n        }\n        return this;\n    };\n}\n/**\n * The .wrap() function can take any string or object that could be passed to\n * the $() factory function to specify a DOM structure. This structure may be\n * nested several levels deep, but should contain only one inmost element. A\n * copy of this structure will be wrapped around each of the elements in the set\n * of matched elements. This method returns the original set of elements for\n * chaining purposes.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const redFruit = $('<div class=\"red-fruit\"></div>');\n * $('.apple').wrap(redFruit);\n *\n * //=> <ul id=\"fruits\">\n * //     <div class=\"red-fruit\">\n * //      <li class=\"apple\">Apple</li>\n * //     </div>\n * //     <li class=\"orange\">Orange</li>\n * //     <li class=\"plum\">Plum</li>\n * //   </ul>\n *\n * const healthy = $('<div class=\"healthy\"></div>');\n * $('li').wrap(healthy);\n *\n * //=> <ul id=\"fruits\">\n * //     <div class=\"healthy\">\n * //       <li class=\"apple\">Apple</li>\n * //     </div>\n * //     <div class=\"healthy\">\n * //       <li class=\"orange\">Orange</li>\n * //     </div>\n * //     <div class=\"healthy\">\n * //        <li class=\"plum\">Plum</li>\n * //     </div>\n * //   </ul>\n * ```\n *\n * @param wrapper - The DOM structure to wrap around each element in the selection.\n * @see {@link https://api.jquery.com/wrap/}\n */\nexports.wrap = _wrap(function (el, elInsertLocation, wrapperDom) {\n    var parent = el.parent;\n    if (!parent)\n        return;\n    var siblings = parent.children;\n    var index = siblings.indexOf(el);\n    (0, parse_js_1.update)([el], elInsertLocation);\n    /*\n     * The previous operation removed the current element from the `siblings`\n     * array, so the `dom` array can be inserted without removing any\n     * additional elements.\n     */\n    uniqueSplice(siblings, index, 0, wrapperDom, parent);\n});\n/**\n * The .wrapInner() function can take any string or object that could be passed\n * to the $() factory function to specify a DOM structure. This structure may be\n * nested several levels deep, but should contain only one inmost element. The\n * structure will be wrapped around the content of each of the elements in the\n * set of matched elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const redFruit = $('<div class=\"red-fruit\"></div>');\n * $('.apple').wrapInner(redFruit);\n *\n * //=> <ul id=\"fruits\">\n * //     <li class=\"apple\">\n * //       <div class=\"red-fruit\">Apple</div>\n * //     </li>\n * //     <li class=\"orange\">Orange</li>\n * //     <li class=\"pear\">Pear</li>\n * //   </ul>\n *\n * const healthy = $('<div class=\"healthy\"></div>');\n * $('li').wrapInner(healthy);\n *\n * //=> <ul id=\"fruits\">\n * //     <li class=\"apple\">\n * //       <div class=\"healthy\">Apple</div>\n * //     </li>\n * //     <li class=\"orange\">\n * //       <div class=\"healthy\">Orange</div>\n * //     </li>\n * //     <li class=\"pear\">\n * //       <div class=\"healthy\">Pear</div>\n * //     </li>\n * //   </ul>\n * ```\n *\n * @param wrapper - The DOM structure to wrap around the content of each element\n *   in the selection.\n * @returns The instance itself, for chaining.\n * @see {@link https://api.jquery.com/wrapInner/}\n */\nexports.wrapInner = _wrap(function (el, elInsertLocation, wrapperDom) {\n    if (!(0, domhandler_1.hasChildren)(el))\n        return;\n    (0, parse_js_1.update)(el.children, elInsertLocation);\n    (0, parse_js_1.update)(wrapperDom, el);\n});\n/**\n * The .unwrap() function, removes the parents of the set of matched elements\n * from the DOM, leaving the matched elements in their place.\n *\n * @category Manipulation\n * @example <caption>without selector</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<div id=test>\\n  <div><p>Hello</p></div>\\n  <div><p>World</p></div>\\n</div>'\n * );\n * $('#test p').unwrap();\n *\n * //=> <div id=test>\n * //     <p>Hello</p>\n * //     <p>World</p>\n * //   </div>\n * ```\n *\n * @example <caption>with selector</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<div id=test>\\n  <p>Hello</p>\\n  <b><p>World</p></b>\\n</div>'\n * );\n * $('#test p').unwrap('b');\n *\n * //=> <div id=test>\n * //     <p>Hello</p>\n * //     <p>World</p>\n * //   </div>\n * ```\n *\n * @param selector - A selector to check the parent element against. If an\n *   element's parent does not match the selector, the element won't be unwrapped.\n * @returns The instance itself, for chaining.\n * @see {@link https://api.jquery.com/unwrap/}\n */\nfunction unwrap(selector) {\n    var _this = this;\n    this.parent(selector)\n        .not('body')\n        .each(function (_, el) {\n        _this._make(el).replaceWith(el.children);\n    });\n    return this;\n}\nexports.unwrap = unwrap;\n/**\n * The .wrapAll() function can take any string or object that could be passed to\n * the $() function to specify a DOM structure. This structure may be nested\n * several levels deep, but should contain only one inmost element. The\n * structure will be wrapped around all of the elements in the set of matched\n * elements, as a single group.\n *\n * @category Manipulation\n * @example <caption>With markup passed to `wrapAll`</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<div class=\"container\"><div class=\"inner\">First</div><div class=\"inner\">Second</div></div>'\n * );\n * $('.inner').wrapAll(\"<div class='new'></div>\");\n *\n * //=> <div class=\"container\">\n * //     <div class='new'>\n * //       <div class=\"inner\">First</div>\n * //       <div class=\"inner\">Second</div>\n * //     </div>\n * //   </div>\n * ```\n *\n * @example <caption>With an existing cheerio instance</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<span>Span 1</span><strong>Strong</strong><span>Span 2</span>'\n * );\n * const wrap = $('<div><p><em><b></b></em></p></div>');\n * $('span').wrapAll(wrap);\n *\n * //=> <div>\n * //     <p>\n * //       <em>\n * //         <b>\n * //           <span>Span 1</span>\n * //           <span>Span 2</span>\n * //         </b>\n * //       </em>\n * //     </p>\n * //   </div>\n * //   <strong>Strong</strong>\n * ```\n *\n * @param wrapper - The DOM structure to wrap around all matched elements in the\n *   selection.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/wrapAll/}\n */\nfunction wrapAll(wrapper) {\n    var el = this[0];\n    if (el) {\n        var wrap_2 = this._make(typeof wrapper === 'function' ? wrapper.call(el, 0, el) : wrapper).insertBefore(el);\n        // If html is given as wrapper, wrap may contain text elements\n        var elInsertLocation = void 0;\n        for (var i = 0; i < wrap_2.length; i++) {\n            if (wrap_2[i].type === 'tag')\n                elInsertLocation = wrap_2[i];\n        }\n        var j = 0;\n        /*\n         * Find the deepest child. Only consider the first tag child of each node\n         * (ignore text); stop if no children are found.\n         */\n        while (elInsertLocation && j < elInsertLocation.children.length) {\n            var child = elInsertLocation.children[j];\n            if (child.type === 'tag') {\n                elInsertLocation = child;\n                j = 0;\n            }\n            else {\n                j++;\n            }\n        }\n        if (elInsertLocation)\n            this._make(elInsertLocation).append(this);\n    }\n    return this;\n}\nexports.wrapAll = wrapAll;\n/* eslint-disable jsdoc/check-param-names*/\n/**\n * Insert content next to each element in the set of matched elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('.apple').after('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param content - HTML string, DOM element, array of DOM elements or Cheerio\n *   to insert after each element in the set of matched elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/after/}\n */\nfunction after() {\n    var _this = this;\n    var elems = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        elems[_i] = arguments[_i];\n    }\n    var lastIdx = this.length - 1;\n    return (0, utils_js_1.domEach)(this, function (el, i) {\n        var parent = el.parent;\n        if (!(0, domhandler_1.hasChildren)(el) || !parent) {\n            return;\n        }\n        var siblings = parent.children;\n        var index = siblings.indexOf(el);\n        // If not found, move on\n        /* istanbul ignore next */\n        if (index < 0)\n            return;\n        var domSrc = typeof elems[0] === 'function'\n            ? elems[0].call(el, i, _this._render(el.children))\n            : elems;\n        var dom = _this._makeDomArray(domSrc, i < lastIdx);\n        // Add element after `this` element\n        uniqueSplice(siblings, index + 1, 0, dom, parent);\n    });\n}\nexports.after = after;\n/* eslint-enable jsdoc/check-param-names*/\n/**\n * Insert every element in the set of matched elements after the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').insertAfter('.apple');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to insert elements after.\n * @returns The set of newly inserted elements.\n * @see {@link https://api.jquery.com/insertAfter/}\n */\nfunction insertAfter(target) {\n    var _this = this;\n    if (typeof target === 'string') {\n        target = this._make(target);\n    }\n    this.remove();\n    var clones = [];\n    this._makeDomArray(target).forEach(function (el) {\n        var clonedSelf = _this.clone().toArray();\n        var parent = el.parent;\n        if (!parent) {\n            return;\n        }\n        var siblings = parent.children;\n        var index = siblings.indexOf(el);\n        // If not found, move on\n        /* istanbul ignore next */\n        if (index < 0)\n            return;\n        // Add cloned `this` element(s) after target element\n        uniqueSplice(siblings, index + 1, 0, clonedSelf, parent);\n        clones.push.apply(clones, clonedSelf);\n    });\n    return this._make(clones);\n}\nexports.insertAfter = insertAfter;\n/* eslint-disable jsdoc/check-param-names*/\n/**\n * Insert content previous to each element in the set of matched elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('.apple').before('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param content - HTML string, DOM element, array of DOM elements or Cheerio\n *   to insert before each element in the set of matched elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/before/}\n */\nfunction before() {\n    var _this = this;\n    var elems = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        elems[_i] = arguments[_i];\n    }\n    var lastIdx = this.length - 1;\n    return (0, utils_js_1.domEach)(this, function (el, i) {\n        var parent = el.parent;\n        if (!(0, domhandler_1.hasChildren)(el) || !parent) {\n            return;\n        }\n        var siblings = parent.children;\n        var index = siblings.indexOf(el);\n        // If not found, move on\n        /* istanbul ignore next */\n        if (index < 0)\n            return;\n        var domSrc = typeof elems[0] === 'function'\n            ? elems[0].call(el, i, _this._render(el.children))\n            : elems;\n        var dom = _this._makeDomArray(domSrc, i < lastIdx);\n        // Add element before `el` element\n        uniqueSplice(siblings, index, 0, dom, parent);\n    });\n}\nexports.before = before;\n/* eslint-enable jsdoc/check-param-names*/\n/**\n * Insert every element in the set of matched elements before the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').insertBefore('.apple');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to insert elements before.\n * @returns The set of newly inserted elements.\n * @see {@link https://api.jquery.com/insertBefore/}\n */\nfunction insertBefore(target) {\n    var _this = this;\n    var targetArr = this._make(target);\n    this.remove();\n    var clones = [];\n    (0, utils_js_1.domEach)(targetArr, function (el) {\n        var clonedSelf = _this.clone().toArray();\n        var parent = el.parent;\n        if (!parent) {\n            return;\n        }\n        var siblings = parent.children;\n        var index = siblings.indexOf(el);\n        // If not found, move on\n        /* istanbul ignore next */\n        if (index < 0)\n            return;\n        // Add cloned `this` element(s) after target element\n        uniqueSplice(siblings, index, 0, clonedSelf, parent);\n        clones.push.apply(clones, clonedSelf);\n    });\n    return this._make(clones);\n}\nexports.insertBefore = insertBefore;\n/**\n * Removes the set of matched elements from the DOM and all their children.\n * `selector` filters the set of matched elements to be removed.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('.pear').remove();\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //    </ul>\n * ```\n *\n * @param selector - Optional selector for elements to remove.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/remove/}\n */\nfunction remove(selector) {\n    // Filter if we have selector\n    var elems = selector ? this.filter(selector) : this;\n    (0, utils_js_1.domEach)(elems, function (el) {\n        (0, domutils_1.removeElement)(el);\n        el.prev = el.next = el.parent = null;\n    });\n    return this;\n}\nexports.remove = remove;\n/**\n * Replaces matched elements with `content`.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const plum = $('<li class=\"plum\">Plum</li>');\n * $('.pear').replaceWith(plum);\n * $.html();\n * //=> <ul id=\"fruits\">\n * //     <li class=\"apple\">Apple</li>\n * //     <li class=\"orange\">Orange</li>\n * //     <li class=\"plum\">Plum</li>\n * //   </ul>\n * ```\n *\n * @param content - Replacement for matched elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/replaceWith/}\n */\nfunction replaceWith(content) {\n    var _this = this;\n    return (0, utils_js_1.domEach)(this, function (el, i) {\n        var parent = el.parent;\n        if (!parent) {\n            return;\n        }\n        var siblings = parent.children;\n        var cont = typeof content === 'function' ? content.call(el, i, el) : content;\n        var dom = _this._makeDomArray(cont);\n        /*\n         * In the case that `dom` contains nodes that already exist in other\n         * structures, ensure those nodes are properly removed.\n         */\n        (0, parse_js_1.update)(dom, null);\n        var index = siblings.indexOf(el);\n        // Completely remove old element\n        uniqueSplice(siblings, index, 1, dom, parent);\n        if (!dom.includes(el)) {\n            el.parent = el.prev = el.next = null;\n        }\n    });\n}\nexports.replaceWith = replaceWith;\n/**\n * Empties an element, removing all its children.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('ul').empty();\n * $.html();\n * //=>  <ul id=\"fruits\"></ul>\n * ```\n *\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/empty/}\n */\nfunction empty() {\n    return (0, utils_js_1.domEach)(this, function (el) {\n        if (!(0, domhandler_1.hasChildren)(el))\n            return;\n        el.children.forEach(function (child) {\n            child.next = child.prev = child.parent = null;\n        });\n        el.children.length = 0;\n    });\n}\nexports.empty = empty;\nfunction html(str) {\n    var _this = this;\n    if (str === undefined) {\n        var el = this[0];\n        if (!el || !(0, domhandler_1.hasChildren)(el))\n            return null;\n        return this._render(el.children);\n    }\n    return (0, utils_js_1.domEach)(this, function (el) {\n        if (!(0, domhandler_1.hasChildren)(el))\n            return;\n        el.children.forEach(function (child) {\n            child.next = child.prev = child.parent = null;\n        });\n        var content = (0, utils_js_1.isCheerio)(str)\n            ? str.toArray()\n            : _this._parse(\"\".concat(str), _this.options, false, el).children;\n        (0, parse_js_1.update)(content, el);\n    });\n}\nexports.html = html;\n/**\n * Turns the collection to a string. Alias for `.html()`.\n *\n * @category Manipulation\n * @returns The rendered document.\n */\nfunction toString() {\n    return this._render(this);\n}\nexports.toString = toString;\nfunction text(str) {\n    var _this = this;\n    // If `str` is undefined, act as a \"getter\"\n    if (str === undefined) {\n        return (0, static_js_1.text)(this);\n    }\n    if (typeof str === 'function') {\n        // Function support\n        return (0, utils_js_1.domEach)(this, function (el, i) {\n            return _this._make(el).text(str.call(el, i, (0, static_js_1.text)([el])));\n        });\n    }\n    // Append text node to each selected elements\n    return (0, utils_js_1.domEach)(this, function (el) {\n        if (!(0, domhandler_1.hasChildren)(el))\n            return;\n        el.children.forEach(function (child) {\n            child.next = child.prev = child.parent = null;\n        });\n        var textNode = new domhandler_1.Text(\"\".concat(str));\n        (0, parse_js_1.update)(textNode, el);\n    });\n}\nexports.text = text;\n/**\n * Clone the cheerio object.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const moreFruit = $('#fruits').clone();\n * ```\n *\n * @returns The cloned object.\n * @see {@link https://api.jquery.com/clone/}\n */\nfunction clone() {\n    return this._make((0, utils_js_1.cloneDom)(this.get()));\n}\nexports.clone = clone;\n//# sourceMappingURL=manipulation.js.map"],"mappings":"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MAAM,GAAG,CAAC,CAAC;EAC7C;EACA,OAAO8D,KAAK,CAACe,MAAM,CAACC,KAAK,CAAChB,KAAK,EAAEM,UAAU,CAAC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASrC,QAAQA,CAACgD,MAAM,EAAE;EACtB,IAAIC,YAAY,GAAG,CAAC,CAAC,EAAE3C,UAAU,CAACI,SAAS,EAAEsC,MAAM,CAAC,GAAGA,MAAM,GAAG,IAAI,CAACE,KAAK,CAACF,MAAM,CAAC;EAClFC,YAAY,CAACnD,MAAM,CAAC,IAAI,CAAC;EACzB,OAAO,IAAI;AACf;AACAlB,OAAO,CAACoB,QAAQ,GAAGA,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,SAASA,CAACiD,MAAM,EAAE;EACvB,IAAIG,aAAa,GAAG,CAAC,CAAC,EAAE7C,UAAU,CAACI,SAAS,EAAEsC,MAAM,CAAC,GAAGA,MAAM,GAAG,IAAI,CAACE,KAAK,CAACF,MAAM,CAAC;EACnFG,aAAa,CAACtD,OAAO,CAAC,IAAI,CAAC;EAC3B,OAAO,IAAI;AACf;AACAjB,OAAO,CAACmB,SAAS,GAAGA,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAnB,OAAO,CAACkB,MAAM,GAAGsB,OAAO,CAAC,UAAUS,GAAG,EAAEV,QAAQ,EAAEe,MAAM,EAAE;EACtDJ,YAAY,CAACX,QAAQ,EAAEA,QAAQ,CAAClD,MAAM,EAAE,CAAC,EAAE4D,GAAG,EAAEK,MAAM,CAAC;AAC3D,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAtD,OAAO,CAACiB,OAAO,GAAGuB,OAAO,CAAC,UAAUS,GAAG,EAAEV,QAAQ,EAAEe,MAAM,EAAE;EACvDJ,YAAY,CAACX,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAEU,GAAG,EAAEK,MAAM,CAAC;AAC7C,CAAC,CAAC;AACF,SAASkB,KAAKA,CAACC,MAAM,EAAE;EACnB,OAAO,UAAUC,OAAO,EAAE;IACtB,IAAI9B,OAAO,GAAG,IAAI,CAACvD,MAAM,GAAG,CAAC;IAC7B,IAAIsF,UAAU,GAAG,IAAI,CAACC,OAAO,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;IACtC,KAAK,IAAIvF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACD,MAAM,EAAEC,CAAC,EAAE,EAAE;MAClC,IAAI8C,EAAE,GAAG,IAAI,CAAC9C,CAAC,CAAC;MAChB,IAAIwF,MAAM,GAAG,OAAOJ,OAAO,KAAK,UAAU,GACpCA,OAAO,CAAC9E,IAAI,CAACwC,EAAE,EAAE9C,CAAC,EAAE8C,EAAE,CAAC,GACvB,OAAOsC,OAAO,KAAK,QAAQ,IAAI,CAAC,CAAC,CAAC,EAAEhD,UAAU,CAACqD,MAAM,EAAEL,OAAO,CAAC,GAC3DC,UAAU,CAACK,IAAI,CAACN,OAAO,CAAC,CAACxE,KAAK,CAAC,CAAC,GAChCwE,OAAO;MACjB,IAAIO,UAAU,GAAG,IAAI,CAAC5D,aAAa,CAACyD,MAAM,EAAExF,CAAC,GAAGsD,OAAO,CAAC,CAAC,CAAC,CAAC;MAC3D,IAAI,CAACqC,UAAU,IAAI,CAAC,CAAC,CAAC,EAAE3D,YAAY,CAACwB,WAAW,EAAEmC,UAAU,CAAC,EACzD;MACJ,IAAIC,gBAAgB,GAAGD,UAAU;MACjC;AACZ;AACA;AACA;MACY,IAAIE,CAAC,GAAG,CAAC;MACT,OAAOA,CAAC,GAAGD,gBAAgB,CAAC3C,QAAQ,CAAClD,MAAM,EAAE;QACzC,IAAI+F,KAAK,GAAGF,gBAAgB,CAAC3C,QAAQ,CAAC4C,CAAC,CAAC;QACxC,IAAI,CAAC,CAAC,EAAEzD,UAAU,CAAC2D,KAAK,EAAED,KAAK,CAAC,EAAE;UAC9BF,gBAAgB,GAAGE,KAAK;UACxBD,CAAC,GAAG,CAAC;QACT,CAAC,MACI;UACDA,CAAC,EAAE;QACP;MACJ;MACAV,MAAM,CAACrC,EAAE,EAAE8C,gBAAgB,EAAE,CAACD,UAAU,CAAC,CAAC;IAC9C;IACA,OAAO,IAAI;EACf,CAAC;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAjF,OAAO,CAACgB,IAAI,GAAGwD,KAAK,CAAC,UAAUpC,EAAE,EAAE8C,gBAAgB,EAAED,UAAU,EAAE;EAC7D,IAAI3B,MAAM,GAAGlB,EAAE,CAACkB,MAAM;EACtB,IAAI,CAACA,MAAM,EACP;EACJ,IAAIgC,QAAQ,GAAGhC,MAAM,CAACf,QAAQ;EAC9B,IAAIgD,KAAK,GAAGD,QAAQ,CAACrB,OAAO,CAAC7B,EAAE,CAAC;EAChC,CAAC,CAAC,EAAEZ,UAAU,CAACgE,MAAM,EAAE,CAACpD,EAAE,CAAC,EAAE8C,gBAAgB,CAAC;EAC9C;AACJ;AACA;AACA;AACA;EACIhC,YAAY,CAACoC,QAAQ,EAAEC,KAAK,EAAE,CAAC,EAAEN,UAAU,EAAE3B,MAAM,CAAC;AACxD,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAtD,OAAO,CAACe,SAAS,GAAGyD,KAAK,CAAC,UAAUpC,EAAE,EAAE8C,gBAAgB,EAAED,UAAU,EAAE;EAClE,IAAI,CAAC,CAAC,CAAC,EAAE3D,YAAY,CAACwB,WAAW,EAAEV,EAAE,CAAC,EAClC;EACJ,CAAC,CAAC,EAAEZ,UAAU,CAACgE,MAAM,EAAEpD,EAAE,CAACG,QAAQ,EAAE2C,gBAAgB,CAAC;EACrD,CAAC,CAAC,EAAE1D,UAAU,CAACgE,MAAM,EAAEP,UAAU,EAAE7C,EAAE,CAAC;AAC1C,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAStB,MAAMA,CAAC2E,QAAQ,EAAE;EACtB,IAAI5D,KAAK,GAAG,IAAI;EAChB,IAAI,CAACyB,MAAM,CAACmC,QAAQ,CAAC,CAChBC,GAAG,CAAC,MAAM,CAAC,CACXC,IAAI,CAAC,UAAUC,CAAC,EAAExD,EAAE,EAAE;IACvBP,KAAK,CAACyC,KAAK,CAAClC,EAAE,CAAC,CAAC7B,WAAW,CAAC6B,EAAE,CAACG,QAAQ,CAAC;EAC5C,CAAC,CAAC;EACF,OAAO,IAAI;AACf;AACAvC,OAAO,CAACc,MAAM,GAAGA,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASD,OAAOA,CAAC6D,OAAO,EAAE;EACtB,IAAItC,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;EAChB,IAAIA,EAAE,EAAE;IACJ,IAAIyD,MAAM,GAAG,IAAI,CAACvB,KAAK,CAAC,OAAOI,OAAO,KAAK,UAAU,GAAGA,OAAO,CAAC9E,IAAI,CAACwC,EAAE,EAAE,CAAC,EAAEA,EAAE,CAAC,GAAGsC,OAAO,CAAC,CAACjE,YAAY,CAAC2B,EAAE,CAAC;IAC3G;IACA,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"},"metadata":{},"sourceType":"script","externalDependencies":[]}